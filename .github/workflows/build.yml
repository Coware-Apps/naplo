name: Build and upload

on:
    push:
        branches:
            - master
            - gha-ios
    pull_request:
        branches:
            - master

jobs:
    android:
        name: Build for Android
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[skip-ci]')"

        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1.1.0

            - name: NPM install
              run: npm install

            - name: Install @ionic/cli and cordova
              run: sudo npm install -g @ionic/cli cordova

            - name: Ionic build
              run: ionic cordova build android --prod --release

            - name: Get package version
              run: |
                  v=`node -p "const p = require('./package.json'); p.version;"`
                  echo ::set-env name=PACKAGE_VERSION::$v

            - uses: r0adkll/sign-android-release@v1
              with:
                  releaseDirectory: platforms/android/app/build/outputs/apk/release
                  signingKeyBase64: ${{ secrets.SIGNING_KEY }}
                  alias: ${{ secrets.SIGNING_ALIAS }}
                  keyStorePassword: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
                  keyPassword: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}

            - name: Upload APK artifact
              uses: actions/upload-artifact@v1.0.0
              with:
                  name: naplo-${{ env.PACKAGE_VERSION }}-release-signed.apk
                  path: ${{ env.SIGNED_RELEASE_FILE }}

            - name: Build AAB
              uses: eskatos/gradle-command-action@v1
              with:
                  wrapper-directory: platforms/android
                  gradle-executable: platforms/android/gradlew
                  build-root-directory: platforms/android
                  arguments: bundle

            - uses: r0adkll/sign-android-release@v1
              with:
                  releaseDirectory: platforms/android/app/build/outputs/bundle/release
                  signingKeyBase64: ${{ secrets.SIGNING_KEY }}
                  alias: ${{ secrets.SIGNING_ALIAS }}
                  keyStorePassword: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
                  keyPassword: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}

            - name: Upload AAB artifact
              uses: actions/upload-artifact@v1.0.0
              with:
                  name: naplo-${{ env.PACKAGE_VERSION }}-release-signed.aab
                  path: ${{ env.SIGNED_RELEASE_FILE }}

    ios:
        name: Build for iOS
        runs-on: macos-latest
        if: "!contains(github.event.head_commit.message, '[skip-ci]')"
        env:
            FASTLANE_APPLE_ID: ${{ secrets.FL_APPLE_ID }}
            FASTLANE_PASSWORD: ${{ secrets.FL_APPLE_PASSWORD }}
            FASTLANE_TEAM_ID: ${{ secrets.FL_TEAM_ID }}
            PILOT_APPLE_ID: ${{ secrets.FL_APPLE_APP_ID }}
            MATCH_PASSWORD: ${{ secrets.MATCH_PASSPHRASE }}
            MATCH_SECRETS_REPO_URL: ${{ secrets.MATCH_SECRETS_REPO_URL }}
            MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_SECRETS_REPO_TOKEN }}

        steps:
            - uses: actions/checkout@v1
            - uses: actions/setup-node@v1.1.0

            - name: Install @ionic/cli and Cordova
              run: sudo npm install -g @ionic/cli cordova

            - name: npm install
              run: npm install

            - name: Build release with fastlane
              run: fastlane ios build

            - if: github.ref == 'master'
              name: Upload to Testflight
              run: fastlane ios upload_to_tf

            - name: Get package version
              run: |
                  v=`node -p "const p = require('./package.json'); p.version;"`
                  echo ::set-env name=PACKAGE_VERSION::$v

            - name: Upload IPA artifact
              uses: actions/upload-artifact@v1.0.0
              with:
                  name: naplo-${{ env.PACKAGE_VERSION }}-release-signed.ipa
                  path: platforms/ios/build/device
